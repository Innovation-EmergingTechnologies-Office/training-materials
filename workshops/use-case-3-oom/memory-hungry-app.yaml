apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-app
  labels:
    app: memory-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memory-app
  template:
    metadata:
      labels:
        app: memory-app
    spec:
      containers:
        - name: memory-hungry
          image: openjdk:26-slim
          command: ["/bin/bash"]
          args: ["-c", "echo 'import java.util.*; public class MemoryHog { public static void main(String[] args) { System.out.println(\"Starting memory-hungry application...\"); List<byte[]> memoryLeak = new ArrayList<>(); int iteration = 0; while(true) { try { byte[] chunk = new byte[5 * 1024 * 1024]; memoryLeak.add(chunk); iteration++; System.out.println(\"Allocated \" + iteration * 5 + \"MB total\"); Thread.sleep(500); } catch(Exception e) { System.err.println(\"Error: \" + e.getMessage()); } } } }' > MemoryHog.java && javac MemoryHog.java && java -Xmx128m MemoryHog"]
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: memory-app-service
spec:
  selector:
    app: memory-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: memory-app-service
spec:
  selector:
    app: memory-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

